"use strict";(self.webpackChunkcardanobi_docs=self.webpackChunkcardanobi_docs||[]).push([[9150],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>c});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var d=n.createContext({}),i=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},o=function(e){var t=i(e.components);return n.createElement(d.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),u=i(a),k=l,c=u["".concat(d,".").concat(k)]||u[k]||m[k]||r;return a?n.createElement(c,p(p({ref:t},o),{},{components:a})):n.createElement(c,p({ref:t},o))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,p=new Array(r);p[0]=k;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[u]="string"==typeof e?e:l,p[1]=s;for(var i=2;i<r;i++)p[i]=a[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>p});var n=a(7294),l=a(6010);const r="tabItem_Ymn6";function p(e){let{children:t,hidden:a,className:p}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,p),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>k});var n=a(7462),l=a(7294),r=a(6010),p=a(2389),s=a(7392),d=a(7094),i=a(2466);const o="tabList__CuJ",u="tabItem_LNqP";function m(e){const{lazy:t,block:a,defaultValue:p,values:m,groupId:k,className:c}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),N=(0,s.l)(g,((e,t)=>e.value===t.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===p?p:p??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==b&&!g.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:T}=(0,d.U)(),[v,f]=(0,l.useState)(b),_=[],{blockElementScrollPositionUntilNextRender:x}=(0,i.o5)();if(null!=k){const e=y[k];null!=e&&e!==v&&g.some((t=>t.value===e))&&f(e)}const Z=e=>{const t=e.currentTarget,a=_.indexOf(t),n=g[a].value;n!==v&&(x(t),f(n),null!=k&&T(k,String(n)))},R=e=>{let t=null;switch(e.key){case"Enter":Z(e);break;case"ArrowRight":{const a=_.indexOf(e.currentTarget)+1;t=_[a]??_[0];break}case"ArrowLeft":{const a=_.indexOf(e.currentTarget)-1;t=_[a]??_[_.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",o)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},c)},g.map((e=>{let{value:t,label:a,attributes:p}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>_.push(e),onKeyDown:R,onClick:Z},p,{className:(0,r.Z)("tabs__item",u,p?.className,{"tabs__item--active":v===t})}),a??t)}))),t?(0,l.cloneElement)(h.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function k(e){const t=(0,p.Z)();return l.createElement(m,(0,n.Z)({key:String(t)},e))}},5998:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294);function l(e){let{children:t,type:a,style_class:l}=e;var r="theme-doc-version-badge badge badge--success";return l?r=l:a&&"post"==a&&(r="theme-doc-version-badge badge badge--warning"),a?n.createElement("span",{class:r},a.toUpperCase(),t):n.createElement("span",{class:r},t)}},4259:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294);a(933);function l(e){let{children:t}=e;return n.createElement("span",{class:"theme-doc-version-badge badge badge-odata"},"OData",t)}},3779:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>k,contentTitle:()=>u,default:()=>g,frontMatter:()=>o,metadata:()=>m,toc:()=>c});var n=a(7462),l=(a(7294),a(3905)),r=a(933),p=a(5488),s=a(5162),d=a(5998),i=a(4259);const o={title:"",sidebar_label:"Updates",sidebar_position:8},u=void 0,m={unversionedId:"core-domain/Pools/Updates",id:"core-domain/Pools/Updates",title:"",description:"Version: 1.0",source:"@site/docs/core-domain/Pools/Updates.md",sourceDirName:"core-domain/Pools",slug:"/core-domain/Pools/Updates",permalink:"/docs/core-domain/Pools/Updates",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"",sidebar_label:"Updates",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Relays",permalink:"/docs/core-domain/Pools/Relays"},next:{title:"BI Domain",permalink:"/docs/category/bi-domain"}},k={},c=[{value:'<span class="theme-doc-version-badge badge badge--success">GET</span> All on-chain pool updates',id:"get-all-on-chain-pool-updates",level:2},{value:"\ud83d\udc68\u200d\ud83d\udcbb Code samples",id:"-code-samples",level:3},{value:"\ud83d\udc8c Response Codes",id:"-response-codes",level:3},{value:"\ud83d\udc8c Response Schemas",id:"-response-schemas",level:3},{value:'<span class="theme-doc-version-badge badge badge--success">GET</span> One pool on-chain updates',id:"get-one-pool-on-chain-updates",level:2},{value:"\ud83c\udfb0 Parameters",id:"-parameters",level:3},{value:"\ud83d\udc68\u200d\ud83d\udcbb Code samples",id:"-code-samples-1",level:3},{value:"\ud83d\udc8c Response Codes",id:"-response-codes-1",level:3},{value:"\ud83d\udc8c Response Schemas",id:"-response-schemas-1",level:3},{value:'<span class="theme-doc-version-badge badge badge--success">GET</span> One pool on-chain updates',id:"get-one-pool-on-chain-updates-1",level:2},{value:"\ud83c\udfb0 Parameters",id:"-parameters-1",level:3},{value:"\ud83d\udc68\u200d\ud83d\udcbb Code samples",id:"-code-samples-2",level:3},{value:"\ud83d\udc8c Response Codes",id:"-response-codes-2",level:3},{value:"\ud83d\udc8c Response Schemas",id:"-response-schemas-2",level:3},{value:'<span class="theme-doc-version-badge badge badge--success">GET</span> All on-chain pool updates <span class="theme-doc-version-badge badge badge-odata"> OData</span>',id:"get-all-on-chain-pool-updates--odata",level:2},{value:"\ud83d\udc68\u200d\ud83d\udcbb Code samples",id:"-code-samples-3",level:3},{value:"\ud83d\udc8c Response Codes",id:"-response-codes-3",level:3},{value:"\ud83d\udc8c Response Schemas",id:"-response-schemas-3",level:3},{value:'<span class="theme-doc-version-badge badge badge--success">GET</span> One pool on-chain updates <span class="theme-doc-version-badge badge badge-odata"> OData</span>',id:"get-one-pool-on-chain-updates--odata",level:2},{value:"\ud83c\udfb0 Parameters",id:"-parameters-2",level:3},{value:"\ud83d\udc68\u200d\ud83d\udcbb Code samples",id:"-code-samples-4",level:3},{value:"\ud83d\udc8c Response Codes",id:"-response-codes-4",level:3},{value:"\ud83d\udc8c Response Schemas",id:"-response-schemas-4",level:3}],h={toc:c};function g(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("span",{class:"theme-doc-version-badge badge badge--primary"},"Version: 1.0"),(0,l.kt)("admonition",{title:"Endpoints Summary ",type:"tip"},(0,l.kt)(d.Z,{type:"GET",mdxType:"EndpointBadge"})," All on-chain pool updates",(0,l.kt)("br",null),(0,l.kt)(d.Z,{type:"GET",mdxType:"EndpointBadge"})," One pool on-chain updates",(0,l.kt)("br",null),(0,l.kt)(d.Z,{type:"GET",mdxType:"EndpointBadge"})," One pool on-chain updates",(0,l.kt)("br",null),(0,l.kt)(d.Z,{type:"GET",mdxType:"EndpointBadge"})," All on-chain pool updates ",(0,l.kt)(i.Z,{mdxType:"ODataBadge"}),(0,l.kt)("br",null),(0,l.kt)(d.Z,{type:"GET",mdxType:"EndpointBadge"})," One pool on-chain updates ",(0,l.kt)(i.Z,{mdxType:"ODataBadge"}),(0,l.kt)("br",null)),(0,l.kt)("h2",{id:"get-all-on-chain-pool-updates"},(0,l.kt)("span",{class:"theme-doc-version-badge badge badge--success"},"GET")," All on-chain pool updates"),(0,l.kt)("p",null,"Returns all on-chain pool updates."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET /api/core/pools/updates")),(0,l.kt)("h3",{id:"-code-samples"},"\ud83d\udc68\u200d\ud83d\udcbb Code samples"),(0,l.kt)(p.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const headers = { \n'Accept':'application/json', \n'Authorization':'Bearer {access-token}' \n}; \n\nfetch('/api/core/epochs', \n{ \nmethod: 'GET', \n\nheaders: headers \n}) \n.then(function(res) { \n    return res.json(); \n}).then(function(body) { \n    console.log(body); \n}); \n"))),(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import requests \nheaders = { \n'Accept': 'application/json', \n'Authorization': 'Bearer {access-token}' \n} \n\nr = requests.get('/api/core/epochs', headers = headers) \n\nprint(r.json()) \n"))),(0,l.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld { \npublic static void main(String args[]) { \n    System.out.println("Hello, World"); \n} \n} \n')))),(0,l.kt)("h3",{id:"-response-codes"},"\ud83d\udc8c Response Codes"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"OK: Successful request.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[ \n { \n  "id": 0, \n  "hash_id": 0, \n  "cert_index": 0, \n  "vrf_key_hash": 0, \n  "pledge": 0, \n  "active_epoch_no": 0, \n  "meta_id": 0, \n  "margin": 0, \n  "fixed_cost": 0, \n  "registered_tx_id": 0, \n  "reward_addr_id": 0, \n  "vrf_key_hash_hex": 0\n } \n] \n'))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Bad Request: The request was unacceptable, often due to missing a required parameter.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Unauthorized: No valid API key provided.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Not Found: The requested resource cannot be found.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n")))),(0,l.kt)("h3",{id:"-response-schemas"},"\ud83d\udc8c Response Schemas"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"200")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The pool update unique identifier.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hash_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolHash table index of the pool this update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cert_index"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int32)"),(0,l.kt)("td",{parentName:"tr",align:null},"The index of this pool update within the certificates of this transaction.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string(byte)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hash of the pool's VRF key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pledge"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount (in Lovelace) the pool owner pledges to the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"active_epoch_no"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch number where this update becomes active.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"meta_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolMetadataRef table index this pool update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"margin"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The margin (as a percentage) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fixed_cost"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The fixed per epoch fee (in ADA) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"registered_tx_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The Tx table index of the transaction in which provided this pool update.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reward_addr_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The StakeAddress table index of this pool's rewards address. New in v13: Replaced reward_addr.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash_hex"),(0,l.kt)("td",{parentName:"tr",align:null},"string(undefined)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hexadecimal encoding of the VRF key hash."))))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"400")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"401")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"404")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined."))),(0,l.kt)("h2",{id:"get-one-pool-on-chain-updates"},(0,l.kt)("span",{class:"theme-doc-version-badge badge badge--success"},"GET")," One pool on-chain updates"),(0,l.kt)("p",null,"Returns the on-chain updates for one pool given its unique identifier."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET /api/core/pools/{pool_id}/updates")),(0,l.kt)("h3",{id:"-parameters"},"\ud83c\udfb0 Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pool_id"),(0,l.kt)("td",{parentName:"tr",align:null},"Pool unique identifier"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},"true")))),(0,l.kt)("h3",{id:"-code-samples-1"},"\ud83d\udc68\u200d\ud83d\udcbb Code samples"),(0,l.kt)(p.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const headers = { \n'Accept':'application/json', \n'Authorization':'Bearer {access-token}' \n}; \n\nfetch('/api/core/epochs', \n{ \nmethod: 'GET', \n\nheaders: headers \n}) \n.then(function(res) { \n    return res.json(); \n}).then(function(body) { \n    console.log(body); \n}); \n"))),(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import requests \nheaders = { \n'Accept': 'application/json', \n'Authorization': 'Bearer {access-token}' \n} \n\nr = requests.get('/api/core/epochs', headers = headers) \n\nprint(r.json()) \n"))),(0,l.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld { \npublic static void main(String args[]) { \n    System.out.println("Hello, World"); \n} \n} \n')))),(0,l.kt)("h3",{id:"-response-codes-1"},"\ud83d\udc8c Response Codes"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"OK: Successful request.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[ \n { \n  "id": 0, \n  "hash_id": 0, \n  "cert_index": 0, \n  "vrf_key_hash": 0, \n  "pledge": 0, \n  "active_epoch_no": 0, \n  "meta_id": 0, \n  "margin": 0, \n  "fixed_cost": 0, \n  "registered_tx_id": 0, \n  "reward_addr_id": 0, \n  "vrf_key_hash_hex": 0\n } \n] \n'))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Bad Request: The request was unacceptable, often due to missing a required parameter.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Unauthorized: No valid API key provided.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Not Found: The requested resource cannot be found.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n")))),(0,l.kt)("h3",{id:"-response-schemas-1"},"\ud83d\udc8c Response Schemas"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"200")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The pool update unique identifier.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hash_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolHash table index of the pool this update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cert_index"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int32)"),(0,l.kt)("td",{parentName:"tr",align:null},"The index of this pool update within the certificates of this transaction.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string(byte)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hash of the pool's VRF key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pledge"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount (in Lovelace) the pool owner pledges to the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"active_epoch_no"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch number where this update becomes active.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"meta_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolMetadataRef table index this pool update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"margin"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The margin (as a percentage) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fixed_cost"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The fixed per epoch fee (in ADA) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"registered_tx_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The Tx table index of the transaction in which provided this pool update.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reward_addr_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The StakeAddress table index of this pool's rewards address. New in v13: Replaced reward_addr.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash_hex"),(0,l.kt)("td",{parentName:"tr",align:null},"string(undefined)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hexadecimal encoding of the VRF key hash."))))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"400")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"401")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"404")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined."))),(0,l.kt)("h2",{id:"get-one-pool-on-chain-updates-1"},(0,l.kt)("span",{class:"theme-doc-version-badge badge badge--success"},"GET")," One pool on-chain updates"),(0,l.kt)("p",null,"Returns the on-chain updates for one pool given its VRF key hash."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET /api/core/pools/{vrf_key_hash}/updates")),(0,l.kt)("h3",{id:"-parameters-1"},"\ud83c\udfb0 Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"The pool VRF key in HEX format."),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"true")))),(0,l.kt)("h3",{id:"-code-samples-2"},"\ud83d\udc68\u200d\ud83d\udcbb Code samples"),(0,l.kt)(p.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const headers = { \n'Accept':'application/json', \n'Authorization':'Bearer {access-token}' \n}; \n\nfetch('/api/core/epochs', \n{ \nmethod: 'GET', \n\nheaders: headers \n}) \n.then(function(res) { \n    return res.json(); \n}).then(function(body) { \n    console.log(body); \n}); \n"))),(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import requests \nheaders = { \n'Accept': 'application/json', \n'Authorization': 'Bearer {access-token}' \n} \n\nr = requests.get('/api/core/epochs', headers = headers) \n\nprint(r.json()) \n"))),(0,l.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld { \npublic static void main(String args[]) { \n    System.out.println("Hello, World"); \n} \n} \n')))),(0,l.kt)("h3",{id:"-response-codes-2"},"\ud83d\udc8c Response Codes"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"OK: Successful request.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[ \n { \n  "id": 0, \n  "hash_id": 0, \n  "cert_index": 0, \n  "vrf_key_hash": 0, \n  "pledge": 0, \n  "active_epoch_no": 0, \n  "meta_id": 0, \n  "margin": 0, \n  "fixed_cost": 0, \n  "registered_tx_id": 0, \n  "reward_addr_id": 0, \n  "vrf_key_hash_hex": 0\n } \n] \n'))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Bad Request: The request was unacceptable, often due to missing a required parameter.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Unauthorized: No valid API key provided.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Not Found: The requested resource cannot be found.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n")))),(0,l.kt)("h3",{id:"-response-schemas-2"},"\ud83d\udc8c Response Schemas"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"200")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The pool update unique identifier.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hash_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolHash table index of the pool this update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cert_index"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int32)"),(0,l.kt)("td",{parentName:"tr",align:null},"The index of this pool update within the certificates of this transaction.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string(byte)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hash of the pool's VRF key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pledge"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount (in Lovelace) the pool owner pledges to the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"active_epoch_no"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch number where this update becomes active.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"meta_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolMetadataRef table index this pool update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"margin"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The margin (as a percentage) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fixed_cost"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The fixed per epoch fee (in ADA) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"registered_tx_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The Tx table index of the transaction in which provided this pool update.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reward_addr_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The StakeAddress table index of this pool's rewards address. New in v13: Replaced reward_addr.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash_hex"),(0,l.kt)("td",{parentName:"tr",align:null},"string(undefined)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hexadecimal encoding of the VRF key hash."))))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"400")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"401")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"404")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined."))),(0,l.kt)("h2",{id:"get-all-on-chain-pool-updates--odata"},(0,l.kt)("span",{class:"theme-doc-version-badge badge badge--success"},"GET")," All on-chain pool updates ",(0,l.kt)("span",{class:"theme-doc-version-badge badge badge-odata"}," OData")),(0,l.kt)("p",null,"Returns all on-chain pool updates."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET /api/core/odata/poolsupdates")),(0,l.kt)("h3",{id:"-code-samples-3"},"\ud83d\udc68\u200d\ud83d\udcbb Code samples"),(0,l.kt)(p.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const headers = { \n'Accept':'application/json', \n'Authorization':'Bearer {access-token}' \n}; \n\nfetch('/api/core/epochs', \n{ \nmethod: 'GET', \n\nheaders: headers \n}) \n.then(function(res) { \n    return res.json(); \n}).then(function(body) { \n    console.log(body); \n}); \n"))),(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import requests \nheaders = { \n'Accept': 'application/json', \n'Authorization': 'Bearer {access-token}' \n} \n\nr = requests.get('/api/core/epochs', headers = headers) \n\nprint(r.json()) \n"))),(0,l.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld { \npublic static void main(String args[]) { \n    System.out.println("Hello, World"); \n} \n} \n')))),(0,l.kt)("h3",{id:"-response-codes-3"},"\ud83d\udc8c Response Codes"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"OK: Successful request.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[ \n { \n  "id": 0, \n  "hash_id": 0, \n  "cert_index": 0, \n  "vrf_key_hash": 0, \n  "pledge": 0, \n  "active_epoch_no": 0, \n  "meta_id": 0, \n  "margin": 0, \n  "fixed_cost": 0, \n  "registered_tx_id": 0, \n  "reward_addr_id": 0, \n  "vrf_key_hash_hex": 0\n } \n] \n'))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Bad Request: The request was unacceptable, often due to missing a required parameter.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Unauthorized: No valid API key provided.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Not Found: The requested resource cannot be found.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n")))),(0,l.kt)("h3",{id:"-response-schemas-3"},"\ud83d\udc8c Response Schemas"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"200")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The pool update unique identifier.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hash_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolHash table index of the pool this update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cert_index"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int32)"),(0,l.kt)("td",{parentName:"tr",align:null},"The index of this pool update within the certificates of this transaction.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string(byte)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hash of the pool's VRF key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pledge"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount (in Lovelace) the pool owner pledges to the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"active_epoch_no"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch number where this update becomes active.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"meta_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolMetadataRef table index this pool update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"margin"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The margin (as a percentage) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fixed_cost"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The fixed per epoch fee (in ADA) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"registered_tx_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The Tx table index of the transaction in which provided this pool update.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reward_addr_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The StakeAddress table index of this pool's rewards address. New in v13: Replaced reward_addr.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash_hex"),(0,l.kt)("td",{parentName:"tr",align:null},"string(undefined)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hexadecimal encoding of the VRF key hash."))))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"400")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"401")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"404")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined."))),(0,l.kt)("h2",{id:"get-one-pool-on-chain-updates--odata"},(0,l.kt)("span",{class:"theme-doc-version-badge badge badge--success"},"GET")," One pool on-chain updates ",(0,l.kt)("span",{class:"theme-doc-version-badge badge badge-odata"}," OData")),(0,l.kt)("p",null,"Returns the on-chain updates for one pool given its unique identifier."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"GET /api/core/odata/poolsupdates/{pool_id}")),(0,l.kt)("h3",{id:"-parameters-2"},"\ud83c\udfb0 Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pool_id"),(0,l.kt)("td",{parentName:"tr",align:null},"Pool unique identifier"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},"true")))),(0,l.kt)("h3",{id:"-code-samples-4"},"\ud83d\udc68\u200d\ud83d\udcbb Code samples"),(0,l.kt)(p.Z,{mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const headers = { \n'Accept':'application/json', \n'Authorization':'Bearer {access-token}' \n}; \n\nfetch('/api/core/epochs', \n{ \nmethod: 'GET', \n\nheaders: headers \n}) \n.then(function(res) { \n    return res.json(); \n}).then(function(body) { \n    console.log(body); \n}); \n"))),(0,l.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import requests \nheaders = { \n'Accept': 'application/json', \n'Authorization': 'Bearer {access-token}' \n} \n\nr = requests.get('/api/core/epochs', headers = headers) \n\nprint(r.json()) \n"))),(0,l.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'class HelloWorld { \npublic static void main(String args[]) { \n    System.out.println("Hello, World"); \n} \n} \n')))),(0,l.kt)("h3",{id:"-response-codes-4"},"\ud83d\udc8c Response Codes"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"OK: Successful request.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[ \n { \n  "id": 0, \n  "hash_id": 0, \n  "cert_index": 0, \n  "vrf_key_hash": 0, \n  "pledge": 0, \n  "active_epoch_no": 0, \n  "meta_id": 0, \n  "margin": 0, \n  "fixed_cost": 0, \n  "registered_tx_id": 0, \n  "reward_addr_id": 0, \n  "vrf_key_hash_hex": 0\n } \n] \n'))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Bad Request: The request was unacceptable, often due to missing a required parameter.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Unauthorized: No valid API key provided.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n"))),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Not Found: The requested resource cannot be found.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"Response schema is undefined.\n")))),(0,l.kt)("h3",{id:"-response-schemas-4"},"\ud83d\udc8c Response Schemas"),(0,l.kt)(p.Z,{groupId:"response-type",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"200",label:"200",attributes:{className:r.Z.green},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"200")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The pool update unique identifier.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hash_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolHash table index of the pool this update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cert_index"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int32)"),(0,l.kt)("td",{parentName:"tr",align:null},"The index of this pool update within the certificates of this transaction.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"string(byte)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hash of the pool's VRF key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pledge"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount (in Lovelace) the pool owner pledges to the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"active_epoch_no"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch number where this update becomes active.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"meta_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The PoolMetadataRef table index this pool update refers to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"margin"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The margin (as a percentage) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fixed_cost"),(0,l.kt)("td",{parentName:"tr",align:null},"number(double)"),(0,l.kt)("td",{parentName:"tr",align:null},"The fixed per epoch fee (in ADA) this pool charges.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"registered_tx_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The Tx table index of the transaction in which provided this pool update.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reward_addr_id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer(int64)"),(0,l.kt)("td",{parentName:"tr",align:null},"The StakeAddress table index of this pool's rewards address. New in v13: Replaced reward_addr.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vrf_key_hash_hex"),(0,l.kt)("td",{parentName:"tr",align:null},"string(undefined)"),(0,l.kt)("td",{parentName:"tr",align:null},"The hexadecimal encoding of the VRF key hash."))))),(0,l.kt)(s.Z,{value:"400",label:"400",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"400")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"401",label:"401",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"401")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined.")),(0,l.kt)(s.Z,{value:"404",label:"404",attributes:{className:r.Z.red},mdxType:"TabItem"},(0,l.kt)("p",null,"Status Code ",(0,l.kt)("strong",{parentName:"p"},"404")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description")))),(0,l.kt)("p",null,"Response schema is undefined."))))}g.isMDXComponent=!0},933:(e,t,a)=>{a.d(t,{Z:()=>n});const n={features:"features_t9lD",featureSvg:"featureSvg_GfXr",green:"green_Lp1g",red:"red_UzOY",orange:"orange_z2Yv",yellow:"yellow_VPC9"}}}]);